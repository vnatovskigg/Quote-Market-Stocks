export const getArticles = async (segment) => {
  const res = await fetch(`http://localhost:8888/api/articles/${segment}`);
  let data = await res.json();
  return data;
};

export const checkForArticle = async (title) => {
  const res = await fetch(`http://localhost:8888/api/articles/`);
  const articles = await res.json();
  const foundArticle = articles.find((article) => {
    return article.title === title;
  });
  if (foundArticle) {
    return false;
  } else {
    return true;
  }
};

export  const fetchArticles = async (segment) => {
  const res = await fetch(`https://bloomberg-market-and-financial-news.p.rapidapi.com/news/list?id=${segment || 'latest'}`, {
    "method": "GET",
    "headers": {
      "x-rapidapi-key": "26b171259cmshcab3cc72d758417p1c9e3ajsn5b654972df21",
      "x-rapidapi-host": "bloomberg-market-and-financial-news.p.rapidapi.com"
    }
  })
  const data = await res.json();
  let modules = data.modules.filter((module) => module.stories.length > 0);

  return modules;
};

export const depositData = async (data, segment) => {
  data && data.filter((foo) => foo.stories.length > 0).forEach((module) => {
    
    module.stories.forEach( async (article) => {
      
      const check = await checkForArticle(article.title);

      if (check) {
        insert(article, segment);  
      }
    })
  })

  return "Success";
}

const insert = (article, segment) => {
  let { title, 
    autoGeneratedSummary, 
    byline, 
    internalID, 
    published, 
    thumbnailImage, 
    shortURL 
  } = article;

  fetch(`http://localhost:8888/api/articles/`, {
    method: "POST",
    body: JSON.stringify({
      title,
      summary: autoGeneratedSummary,
      published: published,
      author: byline,
      url: shortURL,
      thumbnail: thumbnailImage,
      uid: internalID,
      segment
    }),
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
  })
  .then((res) => console.log("Articles++"))
  .catch(err => console.log(err))
}

